name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy
          
      - name: Run linters
        run: |
          flake8 --config=.flake8 api/
          black --check api/
          isort --check-only api/
          mypy api/

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: lint
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd api && pip install -r requirements.txt
          pip install requests
          
      - name: Create required directories
        run: |
          cd api
          mkdir -p static templates
          
      - name: Start API server
        run: |
          cd api
          python main.py &
          sleep 5  # Give the server time to start
          
      - name: Run tests
        run: |
          cd api
          python ../tests/test_api.py

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Install Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Run Bandit
        run: |
          bandit -r api/ -f json -o bandit-results.json || echo "Bandit scan completed with findings."
      - name: Run Safety
        run: |
          python -m pip install safety
          safety check -r api/requirements.txt
  build:
    name: Build RPM
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up CentOS environment and build RPM
        run: |
          docker run -v ${{ github.workspace }}:/workspace -w /workspace quay.io/centos/centos:stream10 bash -c "
            dnf install -y rpm-build &&
            ./build.sh
          "

      - name: Upload RPM artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-api-local-rpm
          path: ./rpmbuild/RPMS/noarch/artifact-api-local-*.rpm
          if-no-files-found: error